from aiogram import types, Dispatcher
from Lesson_10.creation.create_bot import bot
from Lesson_10.keyboards.client_kb import kb_client, kb_client_news, kb_client_schedule
from Lesson_10.parse_mail_ru_news import all_news
from Lesson_10.scheduler.scheduler_show_data import show_data
from Lesson_10.scheduler.scheduler_get_data import get_new_data


async def command_start(message: types.Message):
    await bot.send_message(message.from_user.id, """–î–æ–±—Ä—ã–π –¥–µ–Ω—å! üëã
–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –º–µ—Å—Ç–æ, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–∞—Å—Ç—å""", reply_markup=kb_client)


async def command_scheduler(message: types.Message):
    await bot.send_message(message.from_user.id, """–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ!
–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –∑–∞–Ω—è—Ç–∏—è –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ /show.
–î–ª—è –ø–æ–∫–∞–∑–∞ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∫–æ–º–∞–Ω–¥—É "/show", –≤ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞ (–æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª–æ–≤): "–¥–∞—Ç–∞", "–∫—É—Ä—Å", "—É—Ä–æ–∫", "—Ç–µ–º–∞", "–∑–∞–º–µ—Ç–∫–∞"; –∑–∞—Ç–µ–º –≤ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∏—Å–∫–∞. –î–∞—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–≤–æ–¥–∏—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "dd-mm-yyyy" –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –¥–Ω—è –∏–ª–∏ "dd-mm-yyyy : dd-mm-yyyy" –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –¥–Ω–µ–π.

–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–Ω—è—Ç–∏–∏, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∫–æ–º–∞–Ω–¥—É "/add", –¥–∞–ª–µ–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö –¥–∞–π—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:
1Ô∏è‚É£ –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "dd-mm-yyyy hh:mm";
2Ô∏è‚É£ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—É—Ä—Å–∞;
3Ô∏è‚É£ –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞;
4Ô∏è‚É£ —Ç–µ–º–∞ —É—Ä–æ–∫–∞;
5Ô∏è‚É£ –∑–∞–º–µ—Ç–∫–∞ –æ–± —É—Ä–æ–∫–µ (–µ—Å–ª–∏ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–µ—á–µ–≥–æ, —Ç–æ –ø–æ—Å—Ç–∞–≤—å—Ç–µ -).""", reply_markup=kb_client_schedule)


async def command_scheduler_add(message: types.Message):
    mes = message.text.split('\n')
    if len(mes) == 6:
        get_new_data(mes[1:])
        await bot.send_message(message.from_user.id, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
    else:
        await bot.send_message(message.from_user.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑–æ–∫!')


async def command_scheduler_show(message: types.Message):
    mes = message.text.split('\n')
    if len(mes) == 1:
        await bot.send_message(message.from_user.id, show_data([]))
    elif len(mes) == 3:
        await bot.send_message(message.from_user.id, show_data(mes[1:]))
    else:
        await bot.send_message(message.from_user.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑–æ–∫!')


# async def command_scheduler_change(message: types.Message):
#     pass


async def command_news(message: types.Message):
    await bot.send_message(message.from_user.id, all_news.all_news(), reply_markup=kb_client_news)


async def command_news_numbers(message: types.Message):
    await bot.send_message(message.from_user.id, all_news.one_tidings(int(message.text[1])))


async def command_back_to_main(message: types.Message):
    await bot.send_message(message.from_user.id, '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!', reply_markup=kb_client)


def register_handlers_client(dp: Dispatcher):
    dp.register_message_handler(command_start, commands=['start', 'help'])
    dp.register_message_handler(command_scheduler, commands=['—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', 'schedule'])
    dp.register_message_handler(command_news, commands=['–Ω–æ–≤–æ—Å—Ç–∏', 'news'])
    dp.register_message_handler(command_news_numbers, commands=['1', '2', '3', '4', '5', '6', '7', '8', '9'])
    dp.register_message_handler(command_back_to_main, commands='back')
    dp.register_message_handler(command_scheduler_add, commands='add')
    dp.register_message_handler(command_scheduler_show, commands='show')
    # dp.register_message_handler(command_scheduler_change, commands='change')
